{"version":3,"sources":["statsGenerator.js","axesCreator.js","axesCreatorComponent.js","components/LineChart.js","App.js","serviceWorker.js","index.js"],"names":["statsGenerator","stats","walterId","zachId","alecId","attr","walterStats","filter","d","player","alecStats","zachStats","oStats","walterShotsData","map","date","val","dateLabel","alecShotsData","zachShotsData","oShotsData","calcDAve","pData","newData","tempVal","i","length","push","d3","wData","aData","z","a","w","o","createAxes","thing","state","height","width","margin","data","goals","parseFloat","x","domain","range","bottom","top","interpolate","y","assists","xRef","current","call","g","ticks","tickSizeOuter","node","yRef","left","props","attribute","broStats","dataTemp","Date","parseInt","getMonth","getDate","right","LineChart","React","createRef","this","loading","error","abstractLine","bandwidth","walterLine","alecLine","zachLine","oLine","viewBox","style","maxWidth","font","fill","stroke","strokeWidth","strokeMiterlimit","ref","Component","App","useStyles","bind","handleChange","fetch","then","response","json","jsonData","results","sort","f","datatemp","setState","catch","console","message","event","makeStyles","theme","root","flexGrow","paper","padding","spacing","textAlign","color","palette","text","secondary","log","target","value","statsTypes","variable","Object","keys","shooting_percent","shots","className","FormControl","formControl","InputLabel","id","Select","labelId","onChange","MenuItem","cx","cy","r","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fc61d475.chunk.js","sourcesContent":["import * as d3 from \"d3\";\nimport * as fc from \"d3fc\";\n\nfunction statsGenerator (stats, walterId, zachId, alecId, attr) {\n  const walterStats = stats.filter(d => d.player === walterId);\n  const alecStats = stats.filter(d => d.player === alecId);\n  const zachStats = stats.filter(d => d.player === zachId);\n  const oStats = stats.filter(d => d.player !== walterId && d.player !== zachId && d.player !== alecId);\n\n  const walterShotsData = walterStats.map(d => {return {date: d.date, val: d[attr], dateLabel: d.dateLabel}});\n  const alecShotsData = alecStats.map(d => {return {date: d.date, val: d[attr], dateLabel: d.dateLabel}});\n  const zachShotsData = zachStats.map(d => {return {date: d.date, val: d[attr], dateLabel: d.dateLabel}});\n  const oShotsData = oStats.map(d => {return {date: d.date, val: d[attr], dateLabel: d.dateLabel}});\n\n  function calcDAve (pData) {\n    let newData = [];\n    let date = 0;\n    let val = 0;\n    let dateLabel = \"\";\n    let tempVal = [];\n    for (let i=0; i<pData.length; i++) {\n      if (i === pData.length-1) {\n        tempVal.push(pData[i].val);\n        val = d3.mean(tempVal);\n        newData.push({date: date, val: val, dateLabel: dateLabel});\n      } else if (i === 0){\n        date = pData[i].date;\n        tempVal = [pData[i].val];\n        dateLabel = pData[i].dateLabel;\n      } else if (pData[i].dateLabel === dateLabel) {\n        tempVal.push(pData[i].val);\n      } else {\n        tempVal.push(pData[i].val);\n        val = d3.mean(tempVal);\n        newData.push({date: date, val: val, dateLabel: dateLabel});\n        date = pData[i].date;\n        val = 0;\n        tempVal = [pData[i].val];\n        dateLabel = pData[i].dateLabel;\n      }\n    }\n    return newData;\n  }\n\n  const wData = calcDAve(walterShotsData);\n  const aData = calcDAve(alecShotsData);\n  const zData = calcDAve(zachShotsData);\n  const oData = calcDAve(oShotsData);\n  return{z: zData, a: aData, w: wData, o: oData};\n}\n\nexport default statsGenerator;\n","import * as d3 from \"d3\";\nimport * as fc from \"d3fc\";\nimport statsGenerator from './statsGenerator';\n\nfunction createAxes(thing) {\n  // define vars\n  const walterId = thing.state.walterId;\n  const alecId = thing.state.alecId;\n  const zachId = thing.state.zachId;\n  const height = thing.state.height;\n  const width = thing.state.width;\n  const margin = thing.state.margin;\n  let stats = thing.state.stats;\n  // reformat data to work with d3 axes\n  stats = stats.map(d => {\n    let data = d;\n    data.goals = parseFloat(data.goals);\n    return data;\n  })\n\n  let broStats = statsGenerator(stats, walterId, zachId, alecId, 'goals');\n\n  // functions for x and y axes\n  const xAxis = g => g\n    .attr(\"transform\", \"translate(0, \" + (height - margin.bottom) + \")\")\n    .call(d3.axisBottom(x).ticks(4).tickSizeOuter(0));\n  const yAxis = g => g\n    .attr(\"transform\", \"translate(\"+margin.left+\", 0)\")\n    .call(d3.axisLeft(y).ticks(width / 80).tickSizeOuter(0));\n\n  // define the scales for x and y axes\n  const x = d3.scaleLinear()\n    .domain([0, 1])\n    .range([height - margin.bottom, margin.top])\n    .interpolate(d3.interpolateRound);\n    // .padding(0.1)\n    // .round(true);\n\n  const y = d3.scaleLinear()\n    .domain([0, d3.max(stats, d => d.assists)])\n    .range([height - margin.bottom, margin.top])\n    .interpolate(d3.interpolateRound);\n\n  // generate the actual axes using the dom refs\n  d3.select(thing.xRef.current).call(xAxis).node()\n  d3.select(thing.yRef.current).call(yAxis).node()\n}\n\nexport default createAxes;\n","import * as d3 from \"d3\";\nimport * as fc from \"d3fc\";\nimport statsGenerator from './statsGenerator';\n\nfunction createAxes(thing) {\n  // define vars\n  const walterId = thing.props.props.walterId;\n  const alecId = thing.props.props.alecId;\n  const zachId = thing.props.props.zachId;\n  const height = thing.props.props.height;\n  const width = thing.props.props.width;\n  const margin = thing.props.props.margin;\n  let stats = thing.props.props.stats;\n  let attribute = thing.props.attribute;\n\n  let broStats = statsGenerator(stats, walterId, zachId, alecId, attribute);\n\n  // functions for x and y axes\n  const xAxis = g => g\n    .attr(\"transform\", \"translate(0, \" + (height - margin.bottom) + \")\")\n    .call(d3.axisBottom(x).ticks(width).tickSizeOuter(0));\n  const yAxis = g => g\n    .attr(\"transform\", \"translate(\"+margin.left+\", 0)\")\n    .call(d3.axisLeft(y).ticks(width / 80).tickSizeOuter(0));\n\n  // define the scales for x and y axes\n  const x = d3.scaleBand()\n    .domain(broStats.w.map(d => {\n      let dataTemp = new Date(parseInt(d.date));\n      // console.log(d.date + \" \" + dataTemp.getDate() + \" \" + dataTemp);\n      let dataFinal = (dataTemp.getMonth() + 1) + \"/\" + dataTemp.getDate();\n      return dataFinal;\n    }))\n    .range([margin.left, width - margin.right]);\n\n  const y = d3.scaleLinear()\n    .domain([d3.min([...broStats.z, ...broStats.a, ...broStats.w, ...broStats.o], d => d.val), d3.max([...broStats.z, ...broStats.a, ...broStats.w, ...broStats.o], d => d.val)])\n    .range([height - margin.bottom, margin.top])\n    .interpolate(d3.interpolateRound);\n\n  // generate the actual axes using the dom refs\n  d3.select(thing.xRef.current).call(xAxis).node()\n  d3.select(thing.yRef.current).call(yAxis).node()\n}\n\nexport default createAxes;\n","import React from 'react';\nimport * as d3 from \"d3\";\nimport * as fc from \"d3fc\";\nimport createAxes from '../axesCreatorComponent';\nimport statsGenerator from '../statsGenerator';\n\nclass LineChart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.xRef = React.createRef();\n    this.yRef = React.createRef();\n  }\n\n  componentDidMount() {\n    createAxes(this);\n  }\n\n  componentDidUpdate() {\n    createAxes(this);\n  }\n\n  render() {\n    const walterId = this.props.props.walterId;\n    const alecId = this.props.props.alecId;\n    const zachId = this.props.props.zachId;\n    const loading = this.props.props.loading;\n    const error = this.props.props.error;\n\n    let stats = this.props.props.stats;\n\n    const height = this.props.props.height;\n    const width = this.props.props.width;\n    const margin = this.props.props.margin;\n    const attribute = this.props.attribute;\n\n    // console.log(this.props.props);\n    let broStats = statsGenerator(stats, walterId, zachId, alecId, attribute);\n\n    const abstractLine = d3.line()\n      .x(d => (x(d.date) + x.bandwidth()/2 ))\n      .y(d => y(d.val));\n\n    const x = d3.scaleBand()\n      .domain(broStats.w.map(d => d.date))\n      .range([margin.left, width - margin.right]);\n      // .padding(0.1)\n      // .round(true);\n\n    const y = d3.scaleLinear()\n      .domain([0, d3.max([...broStats.z, ...broStats.a, ...broStats.w, ...broStats.o], d => d.val)])\n      .range([height - margin.bottom, margin.top])\n      .interpolate(d3.interpolateRound);\n\n    const walterLine = abstractLine(broStats.w);\n    const alecLine = abstractLine(broStats.a);\n    const zachLine = abstractLine(broStats.z);\n    const oLine = abstractLine(broStats.o);\n\n    if (loading) {\n      return (<p>Loading...</p>)\n    } else if (error) {\n      return (<p>There was an error</p>)\n    } else {\n      return (\n        <div>\n          <h3>average {attribute} per game per day</h3>\n          <svg viewBox=\"0 0 1200 400\" style={{maxWidth: width + \"px\", font: \"12px sans-serif\"}}>\n            <path d={walterLine} fill=\"none\" stroke=\"steelblue\" strokeWidth=\"1.5\" strokeMiterlimit=\"1\"></path>\n            <path d={alecLine} fill=\"none\" stroke=\"red\" strokeWidth=\"1.5\" strokeMiterlimit=\"1\"></path>\n            <path d={zachLine} fill=\"none\" stroke=\"green\" strokeWidth=\"1.5\" strokeMiterlimit=\"1\"></path>\n            <path d={oLine} fill=\"none\" stroke=\"lightgray\" strokeWidth=\"1.5\" strokeMiterlimit=\"1\"></path>\n            <g ref={this.xRef}></g>\n            <g ref={this.yRef}></g>\n          </svg>\n        </div>\n      )\n    }\n  }\n}\n\nexport default LineChart;\n","import React from 'react';\nimport * as d3 from \"d3\";\nimport * as fc from \"d3fc\";\nimport './App.css';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Button, Grid, Card, CardHeader, CardContent, CardActions, Typography } from '@material-ui/core';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nimport createAxes from './axesCreator';\nimport statsGenerator from './statsGenerator';\nimport LineChart from './components/LineChart';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n      stats: [],\n      error: false,\n      height: 400,\n      width: 1200,\n      margin: {left: 30, top: 30, right: 30, bottom: 30},\n      alecId: '76561198160373236',\n      walterId: '76561198032655243',\n      zachId: '76561198065784767',\n      attribute: 'goals'\n    };\n    this.useStyles = this.useStyles.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.xRef = React.createRef();\n    this.yRef = React.createRef();\n  }\n\n  componentDidMount() {\n    // get data from server\n    let items = fetch('https://still-anchorage-53867.herokuapp.com/stats')\n      // convert response data to json\n      .then(response => response.json())\n      .then((jsonData) => {\n        let results = jsonData.results;\n        results.sort((d,f) => {return(parseInt(d.date) - parseInt(f.date))});\n        results = results.map(d => {\n          let datatemp = new Date(parseInt(d.date));\n          d.dateLabel = (datatemp.getMonth() + 1) + \"/\" + datatemp.getDate();\n          return d;\n        });\n        this.setState({\n          loading: false,\n          stats: results\n        });\n        // create the axes\n        createAxes(this);\n      })\n      .catch((error) => {\n        console.error(error.message)\n        this.setState({error: true})\n      });\n  }\n\n  useStyles(event) {\n    makeStyles((theme) => ({\n      root: {\n        flexGrow: 1,\n      },\n      paper: {\n        padding: theme.spacing(2),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n      },\n    }));\n  }\n\n  handleChange(event) {\n    console.log(event);\n    this.setState({\n      attribute: event.target.value\n    });\n  }\n\n  render() {\n    const walterId = this.state.walterId;\n    const alecId = this.state.alecId;\n    const zachId = this.state.zachId;\n    const loading = this.state.loading;\n    let stats = this.state.stats;\n    stats = stats.map(d => {\n      let data = d;\n      data.goals = parseFloat(data.goals);\n      // data.date = parseInt(data.date);\n      return data;\n    })\n    const error = this.state.error;\n    const useStyles = this.useStyles;\n    const variable = this.state.attribute;\n    const handleChange = this.handleChange;\n\n    const height = this.state.height;\n    const width = this.state.width;\n    const margin = this.state.margin;\n\n    let broStats = statsGenerator(stats, walterId, zachId, alecId, 'goals');\n    let statsTypes;\n    if(stats.length>0) {\n      statsTypes = Object.keys(stats[0]);\n    }\n\n    console.log(statsTypes);\n\n    const x = d3.scaleLinear()\n      .domain([0, d3.max(stats, d => d.shooting_percent)])\n      .range([height - margin.bottom, margin.top])\n      .interpolate(d3.interpolateRound);\n      // .padding(0.1)\n      // .round(true);\n\n    const y = d3.scaleLinear()\n      .domain([0, d3.max(stats, d => d.assists)])\n      .range([height - margin.bottom, margin.top])\n      .interpolate(d3.interpolateRound);\n\n    const line = d3.line()\n      .x(d => (x(d.date) + x.bandwidth()/2 ))\n      .y(d => y(d.shots));\n\n    if (loading) {\n      return (<p>Loading...</p>)\n    } else if (error) {\n      return (<p>There was an error</p>)\n    } else {\n      return (\n        <div className={useStyles.root} style={{ padding: 20 }}>\n          <FormControl className={useStyles.formControl}>\n              <InputLabel id=\"demo-simple-select-label\">Age</InputLabel>\n              <Select\n                labelId=\"demo-simple-select-label\"\n                id=\"demo-simple-select\"\n                value={variable}\n                onChange={handleChange}\n              >\n              <MenuItem value={'goals'}>Goals</MenuItem>\n              {statsTypes.map(d => <MenuItem value={d}>{d}</MenuItem>)}\n            </Select>\n          </FormControl>\n\n          <LineChart props={this.state} attribute={variable}/>\n          <p>Walter = blue</p>\n          <p>Zach = green</p>\n          <p>Alec = red</p>\n          <p>Opponents = gray</p>\n          <svg viewBox=\"0 0 1200 400\" style={{maxWidth: width + \"px\", font: \"12px sans-serif\"}}>\n            {stats.map(d => <circle cx={x(d.shooting_percent)} cy={y(d.assists)} r=\"2\"/>)}\n            <g ref={this.xRef}></g>\n            <g ref={this.yRef}></g>\n          </svg>\n        </div>\n      )\n    }\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}